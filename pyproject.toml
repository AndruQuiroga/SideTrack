[project]
name = "sidetrack"
version = "0.1.0"
description = "Multi-service SideTrack application"
requires-python = ">=3.11"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
base = [
    "pydantic==2.8.2",
    "pydantic-settings==2.3.4",
    "python-dotenv==1.0.1",
    "psycopg[binary]==3.2.1",
    "SQLAlchemy==2.0.32",
    "requests==2.32.3",
]

api = [
    "sidetrack[base]",
    "fastapi==0.111.1",
    "uvicorn[standard]==0.30.1",
    "alembic==1.13.2",
    "httpx[async]==0.27.0",
    "tenacity==8.2.3",
    "passlib[bcrypt]==1.7.4",
    "redis==5.0.7",
    "rq==1.16.2",
    "structlog==24.1.0",
    "google-auth==2.40.3",
    "opentelemetry-api==1.36.0",
    "opentelemetry-sdk==1.36.0",
    "opentelemetry-instrumentation-fastapi==0.57b0",
    "opentelemetry-instrumentation-httpx==0.57b0",
    "opentelemetry-instrumentation-sqlalchemy==0.57b0",
    "pytest-asyncio==0.23.7",
]

extractor = [
    "sidetrack[base]",
    "typer==0.12.3",
    "numpy==1.26.4",
    "scipy==1.13.1",
    "librosa==0.10.2.post1",
    "soundfile==0.12.1",
    "openl3==0.4.2",
]

scheduler = [
    "sidetrack[base]",
    "schedule==1.2.2",
]

worker = [
    "sidetrack[base]",
    "rq==1.16.2",
    "redis==5.0.7",
    "librosa==0.10.2.post1",
    "numpy==1.26.4",
    "soundfile==0.12.1",
    "fakeredis==2.23.2",
]

[tool.setuptools.packages.find]
include = ["sidetrack*"]

[tool.black]
line-length = 100
target-version = ["py311"]
extend-exclude = "^migrations/versions/"

[tool.isort]
profile = "black"
line_length = 100
filter_files = true
skip_gitignore = true

[tool.ruff]
line-length = 100
target-version = "py311"
extend-exclude = ["migrations/versions/"]

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "I",  # isort import order
  "UP", # pyupgrade
]
ignore = [
  "E501",  # let black handle line length
]

[tool.ruff.lint.per-file-ignores]
"migrations/env.py" = ["E402"]
"services/api/alembic/env.py" = ["E402"]
"services/api/app/main.py" = ["E402"]
"services/api/tests/test_scoring.py" = ["E402"]
"sidetrack/api/main.py" = ["E402"]
"services/tests/conftest.py" = ["E402"]
"tests/factories/__init__.py" = ["E402"]

[tool.pytest.ini_options]
markers = [
    "unit: fast-running tests that mock external services",
    "integration: tests that require external services",
]
