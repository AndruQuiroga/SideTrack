"""initial

Revision ID: ef830516179b
Revises: 
Create Date: 2025-09-05 21:44:34.785488

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ef830516179b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artist',
    sa.Column('artist_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('mbid', sa.String(length=36), nullable=True),
    sa.Column('name', sa.String(length=512), nullable=False),
    sa.PrimaryKeyConstraint('artist_id')
    )
    op.create_index(op.f('ix_artist_mbid'), 'artist', ['mbid'], unique=False)
    op.create_index(op.f('ix_artist_name'), 'artist', ['name'], unique=False)
    op.create_table('mood_agg_week',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(length=128), nullable=False),
    sa.Column('week', sa.Date(), nullable=False),
    sa.Column('axis', sa.String(length=64), nullable=False),
    sa.Column('mean', sa.Float(), nullable=False),
    sa.Column('var', sa.Float(), nullable=False),
    sa.Column('momentum', sa.Float(), nullable=False),
    sa.Column('sample_size', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mood_agg_week_axis'), 'mood_agg_week', ['axis'], unique=False)
    op.create_index(op.f('ix_mood_agg_week_user_id'), 'mood_agg_week', ['user_id'], unique=False)
    op.create_index(op.f('ix_mood_agg_week_week'), 'mood_agg_week', ['week'], unique=False)
    op.create_table('release',
    sa.Column('release_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('mbid', sa.String(length=36), nullable=True),
    sa.Column('title', sa.String(length=512), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('label', sa.String(length=256), nullable=True),
    sa.Column('artist_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artist.artist_id'], ),
    sa.PrimaryKeyConstraint('release_id')
    )
    op.create_index(op.f('ix_release_mbid'), 'release', ['mbid'], unique=False)
    op.create_table('track',
    sa.Column('track_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('mbid', sa.String(length=36), nullable=True),
    sa.Column('title', sa.String(length=512), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=True),
    sa.Column('release_id', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('path_local', sa.Text(), nullable=True),
    sa.Column('fingerprint', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artist.artist_id'], ),
    sa.ForeignKeyConstraint(['release_id'], ['release.release_id'], ),
    sa.PrimaryKeyConstraint('track_id')
    )
    op.create_index(op.f('ix_track_fingerprint'), 'track', ['fingerprint'], unique=False)
    op.create_index(op.f('ix_track_mbid'), 'track', ['mbid'], unique=False)
    op.create_index(op.f('ix_track_title'), 'track', ['title'], unique=False)
    op.create_table('embeddings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('track_id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(length=64), nullable=False),
    sa.Column('dim', sa.Integer(), nullable=False),
    sa.Column('vector', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['track_id'], ['track.track_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('embeddings_idx', 'embeddings', ['track_id'], unique=False)
    op.create_table('features',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('track_id', sa.Integer(), nullable=False),
    sa.Column('bpm', sa.Float(), nullable=True),
    sa.Column('bpm_conf', sa.Float(), nullable=True),
    sa.Column('key', sa.String(length=8), nullable=True),
    sa.Column('key_conf', sa.Float(), nullable=True),
    sa.Column('chroma_stats', sa.JSON(), nullable=True),
    sa.Column('spectral', sa.JSON(), nullable=True),
    sa.Column('dynamics', sa.JSON(), nullable=True),
    sa.Column('stereo', sa.JSON(), nullable=True),
    sa.Column('percussive_harmonic_ratio', sa.Float(), nullable=True),
    sa.Column('pumpiness', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['track_id'], ['track.track_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_features_track_id'), 'features', ['track_id'], unique=False)
    op.create_table('graph_edges',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('src_track_id', sa.Integer(), nullable=False),
    sa.Column('dst_track_id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('kind', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['dst_track_id'], ['track.track_id'], ),
    sa.ForeignKeyConstraint(['src_track_id'], ['track.track_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_graph_edges_dst_track_id'), 'graph_edges', ['dst_track_id'], unique=False)
    op.create_index(op.f('ix_graph_edges_src_track_id'), 'graph_edges', ['src_track_id'], unique=False)
    op.create_table('labels_user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(length=128), nullable=False),
    sa.Column('track_id', sa.Integer(), nullable=False),
    sa.Column('axis', sa.String(length=64), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['track_id'], ['track.track_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_labels_user_track_id'), 'labels_user', ['track_id'], unique=False)
    op.create_index(op.f('ix_labels_user_user_id'), 'labels_user', ['user_id'], unique=False)
    op.create_table('lastfm_tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('track_id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(length=16), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['track_id'], ['track.track_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lastfm_tags_track_id'), 'lastfm_tags', ['track_id'], unique=False)
    op.create_table('listen',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(length=128), nullable=False),
    sa.Column('track_id', sa.Integer(), nullable=False),
    sa.Column('played_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('source', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['track_id'], ['track.track_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_listen_played_at'), 'listen', ['played_at'], unique=False)
    op.create_index(op.f('ix_listen_user_id'), 'listen', ['user_id'], unique=False)
    op.create_index('listen_idx_time', 'listen', ['played_at'], unique=False)
    op.create_index('listen_idx_track', 'listen', ['track_id'], unique=False)
    op.create_table('mood_scores',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('track_id', sa.Integer(), nullable=False),
    sa.Column('axis', sa.String(length=64), nullable=False),
    sa.Column('method', sa.String(length=64), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['track_id'], ['track.track_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('track_id', 'axis', 'method', name='mood_scores_unique')
    )
    op.create_index(op.f('ix_mood_scores_track_id'), 'mood_scores', ['track_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_mood_scores_track_id'), table_name='mood_scores')
    op.drop_table('mood_scores')
    op.drop_index('listen_idx_track', table_name='listen')
    op.drop_index('listen_idx_time', table_name='listen')
    op.drop_index(op.f('ix_listen_user_id'), table_name='listen')
    op.drop_index(op.f('ix_listen_played_at'), table_name='listen')
    op.drop_table('listen')
    op.drop_index(op.f('ix_lastfm_tags_track_id'), table_name='lastfm_tags')
    op.drop_table('lastfm_tags')
    op.drop_index(op.f('ix_labels_user_user_id'), table_name='labels_user')
    op.drop_index(op.f('ix_labels_user_track_id'), table_name='labels_user')
    op.drop_table('labels_user')
    op.drop_index(op.f('ix_graph_edges_src_track_id'), table_name='graph_edges')
    op.drop_index(op.f('ix_graph_edges_dst_track_id'), table_name='graph_edges')
    op.drop_table('graph_edges')
    op.drop_index(op.f('ix_features_track_id'), table_name='features')
    op.drop_table('features')
    op.drop_index('embeddings_idx', table_name='embeddings')
    op.drop_table('embeddings')
    op.drop_index(op.f('ix_track_title'), table_name='track')
    op.drop_index(op.f('ix_track_mbid'), table_name='track')
    op.drop_index(op.f('ix_track_fingerprint'), table_name='track')
    op.drop_table('track')
    op.drop_index(op.f('ix_release_mbid'), table_name='release')
    op.drop_table('release')
    op.drop_index(op.f('ix_mood_agg_week_week'), table_name='mood_agg_week')
    op.drop_index(op.f('ix_mood_agg_week_user_id'), table_name='mood_agg_week')
    op.drop_index(op.f('ix_mood_agg_week_axis'), table_name='mood_agg_week')
    op.drop_table('mood_agg_week')
    op.drop_index(op.f('ix_artist_name'), table_name='artist')
    op.drop_index(op.f('ix_artist_mbid'), table_name='artist')
    op.drop_table('artist')
    # ### end Alembic commands ###
